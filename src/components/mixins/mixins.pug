include ./mburger/mburger.pug
include ./buttons/buttons.pug

mixin button(options )
        div(class=`btn__block ${options.className}`)
            button(class=options.isPrimary?'btn btn--primary': 'btn btn--second', onclick=`location.href='${options.link}'`)=options.text
            //- img( alt="enter", class=options.isImage?"btn__image":"btn__image-none")
            img(src=require("@assets/arrow_forwardWhite.svg").default, alt="enter", class=options.isImage?"btn__image":"btn__image-none")

//- {text, isPrimary, isImage=false, className?}
 //- a(href=`/${options.link}` data-link)
mixin cardFooter(items, name )
    ul(class=`menu__list ${name}`) 
        each name,index in items 
            li(class=`menu__item${index+1}`)
                a(href="#")= name

mixin cardCalendar(options)
    .calendar__block
        .calendar__wrapper
            h2 Найдём номера под ваши пожелания
            +calendarCheck(options)
            //- .calendar__period#options.idCalendar 
            //-     label(for=`arrival-${options.idCalendar}`) прибытие
            //-         input(type="date", name="arrival", id=`arrival-${options.idCalendar}`, class="main__arrival")
            //-     label(for=`departure-${options.idCalendar}`) выезд
            //-         input(type="date", name="departure", id=`departure-${options.idCalendar}`, class="main__departure")
            +dropdownGuest(options)
            +button({text:"подобрать номер", isPrimary:true, isImage:true, link:"/hotelScout/search"})

mixin calendarCheck(options)
            .calendar__period(id=options.idCalendar) 
                label(for=`arrival-${options.idCalendar}`) #{options.arrival}
                    input(type="date", name="arrival", id=`arrival-${options.idCalendar}`, class="main__arrival")
                    img(src=require("@assets/expand_more.svg").default, alt="expend more")
                label(for=`departure-${options.idCalendar}`) #{options.departure}
                    input(type="date", name="departure", id=`departure-${options.idCalendar}`, class="main__departure")
                    img(src=require("@assets/expand_more.svg").default, alt="expend more")

mixin dropdownGuest(options)
    div(class='dropdown')
        label(for="guest") #{options.label?options.label:""}
        .guest-title 
            button(class="show-dropdown") Сколько гостей
            img(src=require("@assets/expand_more.svg").default, alt="expand more")
            div(class=`dropdown__content ${options.isContent? "guest-design--active":""}`)
                +valueControl("взрослые", "adults")
                +valueControl("дети", "children") 
                +valueControl("младенцы", "babies")
                .guest-design 
                    button(class=`guest__button--clear ${options.isClear?options.isClear:""}`) очистить
                    button(class="guest__button--apply") применить

//- valueControl for dropdownGuest

mixin valueControl(name, className)
    .value__control 
        span(class=className)= name
        .value__block
            button(class=`${className} btn--minus btn-active`) -
            span(class=`${className} btn-value`) 0
            button(class=`${className} btn--plus`) +


mixin registration(options)
    -
     var registrationClassName = options.isEnter ? "registration" : "registration enter__card";
     var registrationTitle = options.isEnter ? "Регистрация аккаунта" : "Войти";
     var forButton = options.isEnter ? "зарегистрироваться" : "войти";
     var dataEnter = options.isEnter ? "данные для входа в сервис" : "";
     var registrationText = options.isEnter ? "Уже есть аккаунт на Toxin" : "Нет аккаунта на Toxin?";
     var registrationFinish = options.isEnter ? "войти" : "создать";
    div(class = `forRegistration ${options.className ? "show" : "showNone"} ${options.isEnter ? "enter-form" : "registration-form"}`)
        .registration__block
            h2= registrationTitle
            div(class=registrationClassName)
                input(type="text", name="name", class="registrationName", placeholder="Имя")
                input(type="text", name="surname", class="registrationSurname", placeholder="Фамилия")
                +radioButton
                //- .forMale
                //-     label(for="male")
                //-         input(type="radio" id="male" name="gender" class="registrationMale" value="male")
                //-         | Мужчина
                //-     label(for="female")
                //-         input(type="radio" id="female" name="gender" class="registrationFemale" value="female")
                //-         | Женщина
                .born 
                    label(for="born") дата рождения
                        input(type="date", name="born", id="born")
            span(class="registration__forEnter")= dataEnter
            label(for=`enterEmail-${options.page}`) 
                input(type="email", id=`enterEmail-${options.page}` name="enterEmail" class="registrationEmail" placeholder="Email")
            label(for=`enterPassword-${options.page}`)
                input(type="password", id=`enterPassword-${options.page}` name="enterEmail" class="registrationPassword" placeholder="Пароль")
            div(class=registrationClassName)
                +toggleButton(options)
                //- .toggle 
                //-     input(type="checkbox", id="special" name="special" class="toggle-checkbox")
                //-     label(for="special" class="toggle-label") 
                //-     span Получать спецпредложения
            +button({text:forButton, isPrimary:true, isImage:true})
            .registration__footer
                span= registrationText
                +button({text:registrationFinish, isPrimary:false})


mixin ui-header(options)
    header(class=`ui-header ${options.className? "ui__area":"" }`)

        div(class='header-wrapper')
            //- a(href="/"  data-link, onclick="initializeCalendar()")
            a(href="/hotelScout"  data-link)
                img(src=require("@assets/ui-logo.svg").default, alt="logo")
            span(class='ui__title')= options.title
            +menu([
            { key: "colors", label: "Colors & Type" },
            { key: "forms", label: "Form Elements" },
            { key: "cards", label: "Cards" },
            { key: "headers", label: "Headers & Footers" }
            ], options.active)
            .menu-btn.bar-second 
                span.bar
                span.bar
                span.bar
            +burger(false)


mixin menu(items, active)
    ul.header-navigation
        each item in items
            if active === item.key
                li #{item.label}
            else
                a(href=`/hotelScout/ui-${item.key}` data-link)
                    li #{item.label}

mixin ui-color 
    .ui-color 
        +color-list([
            { color: "#1F2041", title: "Dark Shade 100%",opacity: 1},
            { color: "#1F2041", title: "Dark Shade 75%",opacity: 0.75},
            { color: "#1F2041", title: "Dark Shade 50%",opacity: 0.50},
            { color: "#1F2041", title: "Dark Shade 25%",opacity: 0.25},
            { color: "#1F2041", title: "Dark Shade 5%",opacity: 0.05},
            { color: "#BC9CFF", title: "Purple",opacity: 1},
            { color: "#6FCF97", title: "Green",opacity: 1},
            
        ]) 
        

mixin color-list(colors)
    each color in colors
        .color-item 
            .color__block(style=`background-color: ${color.color}; opacity: ${color.opacity}`)
                span
            .color__title
                span= color.title
                span= color.color

mixin ui-type
    .ui-type
        +type-list([
            { title: "H1", text: "This one is the sub-section or widget title" },
            { title: "H2", text: "Next one is the item title inside widgets" },
            { title: "H3", text: "This is a label or CTA text" },
            { title: "Body", text: "This is the body text which is used for most of the design, like paragraphs, lists, etc." },


        ])


mixin type-list(types)
    each type in types
        .type-item 
            .type__block
                span= type.title
            .type__title
                span= type.text

mixin story(options) 
    .story-block 
        div(class=`story-color ${options.color}`) 
        .story-text #{options.text}